# vim: set fdm=marker:
# Now using https://github.com/jackielii/skhd.zig for hotkeys

.SHELL "/bin/dash"

# focus cmd - ? {{{
lcmd - h : yabai -m window --focus west || yabai -m display --focus west || yabai -m display --focus recent
lcmd - j : yabai -m window --focus stack.next || yabai -m window --focus south || yabai -m display --focus south || yabai -m window --focus stack.first
lcmd - k : yabai -m window --focus stack.prev || yabai -m window --focus north || yabai -m display --focus north || yabai -m window --focus stack.last
lcmd - l : yabai -m window --focus east || yabai -m display --focus east || yabai -m display --focus mouse

cmd + ctrl - h : yabai -m space --focus prev
# cmd + ctrl - j : yabai -m window --insert south
# cmd + ctrl - k : yabai -m window --insert north
cmd + ctrl - l : yabai -m space --focus next

# cmd - h : yabai -m window --focus west \
#     || yabai -m display --focus west \
#     || yabai -m window --focus $( \
#         (yabai -m query --spaces --space next) \
#             | jq -re '.[] | select(."is-visible" == true)."last-window"')
# cmd - l : yabai -m window --focus east \
#     || yabai -m display --focus east \
#     || yabai -m window --focus $( \
#         (yabai -m query --spaces --display) \
#             | jq -re '.[] | select(."is-visible" == true)."first-window"')

# cmd + number is used in many applications. I have to get used to using ctrl
lcmd - 1 : yabai -m space --focus 1
lcmd - 2 : yabai -m space --focus 2
lcmd - 3 : yabai -m space --focus 3
lcmd - 4 : yabai -m space --focus 4
lcmd - 5 : yabai -m space --focus 5
lcmd - 6 : yabai -m space --focus 6
lcmd - 7 : yabai -m space --focus 7
lcmd - 8 : yabai -m space --focus 8
lcmd - 9 : yabai -m space --focus 9

# cmd + ctrl - 1 : yabai -m space --focus 1
# cmd + ctrl - 2 : yabai -m space --focus 2
# cmd + ctrl - 3 : yabai -m space --focus 3
# cmd + ctrl - 4 : yabai -m space --focus 4
# cmd + ctrl - 5 : yabai -m space --focus 5
# cmd + ctrl - 6 : yabai -m space --focus 6
# cmd + ctrl - 7 : yabai -m space --focus 7
# cmd + ctrl - 8 : yabai -m space --focus 8
# cmd + ctrl - 9 : yabai -m space --focus 9

# focus full screen alt-`
lalt - 0x32 : yabai -m space --focus \
    $(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == true).index)|.[0]') \
        || yabai -m space --focus recent
cmd + ctrl - d : yabai -m space --toggle show-desktop

# toggle padding
f16: yabai -m space --toggle padding

# focus previous window: there is no way to switch to recent floating window
# cmd - tab : yabai -m window --focus recent || yabai -m space --focus recent
cmd - f14 : yabai -m window --focus recent || yabai -m space --focus recent
f15 : yabai -m space --focus recent
# cycle through all windows in current space
cmd + ctrl - tab :  yabai -m window --focus $(yabai -m query --windows --space | jq 'map(select( .title != "Microsoft Teams Notification" and .scratchpad == "" )) | sort_by(.id) | reverse | .[map(."has-focus") | index(true)-1].id')
# reverse cycle through all windows in current space
cmd + ctrl + shift - tab :  yabai -m window --focus $(yabai -m query --windows --space | jq 'map(select( .title != "Microsoft Teams Notification" and .scratchpad == "" )) | sort_by(.id) | .[map(."has-focus") | index(true)-1].id')

## ctrl+pause to cycle through windows on the same spaces
ctrl - f14 :  yabai -m window --focus $(yabai -m query --windows --space | jq 'map(select( .title != "Microsoft Teams Notification" and .scratchpad == "" )) | sort_by(.id) | reverse | .[map(."has-focus") | index(true)-1].id')

## f15 is pause, f14 is screenlock
# lalt - tab : yabai -m space --toggle mission-control && cliclick -r w:150 m:0,0
## 0x32 is `
cmd + ctrl - 0x32 : yabai -m space --toggle mission-control && cliclick -r w:150 m:0,0

# ctrl - f13 : /Applications/flameshot.app/Contents/MacOS/flameshot gui
# shift - f13 : open -a flameshot --args screen
# }}}

# move window cmd + shift - ? {{{
cmd + shift - h : yabai -m window --swap west || ( yabai -m window --display west ; yabai -m display --focus west )
cmd + shift - j : yabai -m window --swap south || ( yabai -m window --display south ; yabai -m display --focus south )
cmd + shift - k : yabai -m window --swap north || ( yabai -m window --display north ; yabai -m display --focus north )
cmd + shift - l : yabai -m window --swap east || ( yabai -m window --display east ; yabai -m display --focus east )

cmd + shift - 1 : yabai -m window --space 1
cmd + shift - 2 : yabai -m window --space 2
cmd + shift - 3 : yabai -m window --space 3
cmd + shift - 4 : yabai -m window --space 4
cmd + shift - 5 : yabai -m window --space 5
cmd + shift - 6 : yabai -m window --space 6
cmd + shift - 7 : yabai -m window --space 7
cmd + shift - 8 : yabai -m window --space 8
cmd + shift - 9 : yabai -m window --space 9
cmd + shift - 0 : yabai -m window --space 10

# cmd + ctrl + shift - 1 : yabai -m window --space 11
# cmd + ctrl + shift - 2 : yabai -m window --space 12
# cmd + ctrl + shift - 3 : yabai -m window --space 13
# cmd + ctrl + shift - 4 : yabai -m window --space 14
# cmd + ctrl + shift - 5 : yabai -m window --space 15
# cmd + ctrl + shift - 6 : yabai -m window --space 16
# cmd + ctrl + shift - 7 : yabai -m window --space 17
# cmd + ctrl + shift - 8 : yabai -m window --space 18
# cmd + ctrl + shift - 9 : yabai -m window --space 19
# cmd + ctrl + shift - 0 : yabai -m window --space 10

## resize
cmd + ctrl + shift - k: yabai -m window --resize top:0:-10 || yabai -m window south --resize top:0:-10
cmd + ctrl + shift - j: yabai -m window --resize bottom:0:10 || yabai -m window north --resize bottom:0:10
cmd + ctrl + shift - h: yabai -m window --resize left:-10:0 || yabai -m window east --resize left:-10:0
cmd + ctrl + shift - l: yabai -m window --resize right:10:0 || yabai -m window west --resize right:10:0
# }}}

# warp & stack {{{

# Define window management mode for warp/stack operations
# use anybar to indicate the mode: https://github.com/tonsky/AnyBar
:: winmode @ : echo -n "red" | nc -4u -w0 localhost 1738
:: default : echo -n "hollow" | nc -4u -w0 localhost 1738

# Enter window mode with meh + m
meh - m ; winmode
winmode < escape ; default
winmode < meh - m ; default

# Focus operations - basic hjkl for focus
winmode < h : yabai -m window --focus west || yabai -m display --focus west || yabai -m display --focus recent
winmode < j : yabai -m window --focus stack.next || yabai -m window --focus south || yabai -m display --focus south || yabai -m window --focus stack.first
winmode < k : yabai -m window --focus stack.prev || yabai -m window --focus north || yabai -m display --focus north || yabai -m window --focus stack.last
winmode < l : yabai -m window --focus east || yabai -m display --focus east || yabai -m display --focus mouse

# Move operations - shift + hjkl for moving
winmode < shift - h : yabai -m window --move rel:-80:0
winmode < shift - j : yabai -m window --move rel:0:80
winmode < shift - k : yabai -m window --move rel:0:-80
winmode < shift - l : yabai -m window --move rel:80:0

# Warp operations - alt + shift + hjkl for warping
winmode < alt + shift - h : yabai -m window --warp west
winmode < alt + shift - j : yabai -m window --warp south
winmode < alt + shift - k : yabai -m window --warp north
winmode < alt + shift - l : yabai -m window --warp east

# Stack operations - ctrl + shift + hjkl for stacking
winmode < ctrl + shift - h : yabai -m window --stack west
winmode < ctrl + shift - j : yabai -m window --stack south
winmode < ctrl + shift - k : yabai -m window --stack north
winmode < ctrl + shift - l : yabai -m window --stack east

# Stack management shortcuts
winmode < s : yabai -m window --insert stack  # Toggle stack mode
winmode < u : yabai -m window --toggle float; yabai -m window --toggle float  # Unstack window
winmode < n : yabai -m window --focus stack.next  # Navigate stack next
winmode < p : yabai -m window --focus stack.prev  # Navigate stack prev

# Original keybindings kept as alternatives
alt + cmd + shift - k : yabai -m window --warp north
alt + cmd + shift - j : yabai -m window --warp south
alt + cmd + shift - h : yabai -m window --warp west
alt + cmd + shift - l : yabai -m window --warp east

alt + ctrl + shift - k: yabai -m window --stack north
alt + ctrl + shift - j: yabai -m window --stack south
alt + ctrl + shift - h: yabai -m window --stack west
alt + ctrl + shift - l: yabai -m window --stack east
# }}}

# layout {{{
#cmd - s : yabai -m space --layout stack
lcmd - e : [ $(yabai -m query --spaces --space | jq -re '.type') = 'bsp' ] && yabai -m space --layout stack || yabai -m space --layout bsp
cmd + shift - space : yabai -m window --toggle float; yabai -m window --grid 8:8:1:1:6:6
cmd + ctrl + shift - space : yabai -m window --toggle topmost

## fullscreen
cmd - f11 : yabai -m window --toggle native-fullscreen
ctrl + cmd - f : yabai -m window --toggle native-fullscreen

# ## flash window border for active window
# cmd + ctrl + shift - w : yabai -m window --toggle border; sleep 0.5; yabai -m config window_border off
# ## 0x2F is dot
# cmd + ctrl + shift - 0x2F : yabai -m window --toggle border; sleep 0.5; yabai -m config window_border off
## 0x4C is numpad Enter
0x4C : yabai -m window --focus mouse

## 0x18 is = ; 0x1B is -
cmd + shift - 0x18 : yabai -m space --balance y-axis
cmd + shift - 0x1B : yabai -m space --balance x-axis
# }}}

# common ctr - number to cmd - number {{{
ctrl - 1 | cmd - 1
ctrl - 2 | cmd - 2
ctrl - 3 | cmd - 3
ctrl - 4 | cmd - 4
ctrl - 5 | cmd - 5
ctrl - 6 | cmd - 6
ctrl - 7 | cmd - 7
ctrl - 8 | cmd - 8
ctrl - 9 | cmd - 9
# }}}

# some common shortcuts conflicts with current mappings {{{
# ctrl + cmd - k : skhd -k "hyper - 0x80" ; skhd -k "cmd - k" ; skhd -k "hyper - 0x80"
ctrl + cmd - k | cmd - k
# }}}

# launch common apps {{{

cmd + ralt - r : yabai -m window --scratchpad recover
ralt - 0x32 : yabai -m window --toggle music || open -a "YouTube Music"
# alt - return: yabai -m window --toggle tt || fish -c "kitty -o tab_bar_min_tabs=3 -o hide_window_decorations=false -d ~ -T 'T_T'"
ralt - return: fish -c "kitten quick-access-terminal -o os_window_title=main"
lalt - c: yabai -m window --toggle wechat || open -a "WeChat"
alt - a: yabai -m window --toggle whatsapp || open -a "WhatsApp"
alt - d: yabai -m window --toggle finder || open ~/Downloads
ralt - n: yabai -m window --toggle notes || open -a "Notes"
lalt - t: yabai -m window --toggle chatgpt || open -a "ChatGPT"
ralt - p: yabai -m window --toggle skype || open -a "Skype"

# switch to main first tmux listening to socket, if none, launch new one
ralt - t : kitty @ --to unix:/tmp/mykitty focus-window -m id:1 || \
    fish -c "kitty -1 --listen-on=unix:/tmp/mykitty -d ~ -o os_window_title=main"
    # fish -c "~/personal/kitty/kitty/launcher/kitty.app/Contents/MacOS/kitty -1 -d ~"
    # zsh -ci "kitty -1 -d ~"
        # zsh -c "source ~/.base16_theme; tmux new-session -A -s main"
# alt - f : kitty -d ~ --title 'MY-|-Filer' lf
# -1 option makes it very fast but makes -o option not work
ralt - f : fish -c "kitty -1 -d ~ -T 'MY-|-Filer' lf"
# ralt - f : fish -c "kitty -1 --instance-group lf -d ~ -T 'MY-|-Filer' -o tab_bar_min_tabs=2 lf"

cmd + shift - return : kitty -1 -d ~
# cmd + shift - return : zsh -ci "kitty -1 -d ~"
# cmd + ctrl - return : open -a "Google Chrome.app"
cmd + ctrl + shift - return : open ~
# ralt - w : open -a "Google Chrome.app"
# alt - f : open ~
ralt - m : open -a "Microsoft Outlook.app"
# cmd + ctrl + shift - return : kitty -1 -d ~ zsh -c "source ~/.base16_theme; ranger"
# }}}

# for this mac: need to be more like linux {{{
cmd + shift - x : yabai -m window --close

# uk keyboard § to `
# 0x0A : skhd -t "`"
# shift - 0x0A : skhd -t "~"
# }}}

# editing remaps: more like linux {{{

# Process groups for better organization
.define native_apps ["kitty", "WezTerm"]

# delete word
ctrl - backspace [
    @native_apps ~
    *              | alt - backspace
]
ctrl - delete [
    @native_apps ~
    *              | alt - delete
]

# move word
ctrl - left [
    @native_apps ~
    *              | alt - left
]
ctrl - right [
    @native_apps ~
    *              | alt - right
]

# select word
ctrl + shift - left | alt + shift - left
ctrl + shift - right | alt + shift - right

# Home & end hack
home [
    @native_apps ~
    *              | cmd - left
]
end [
    @native_apps  ~
    *              | cmd - right
]

shift - home [
    @native_apps ~
    *            | cmd + shift - left
]
shift - end [
    @native_apps ~
    *            | cmd + shift - right
]

# ctrl + home/end hack
ctrl - home [
    @native_apps ~
    *            | cmd - up
]
ctrl - end [
    @native_apps ~
    *            | cmd - down
]

ctrl + shift - home [
    @native_apps ~
    *            | cmd + shift - up
]
ctrl + shift - end [
    @native_apps ~
    *            | cmd + shift - down
]
# }}}

.blacklist [
    "dota2"
    "Microsoft Remote Desktop"
]

# focus on floating
# cmd + ctrl - a : yabai -m window --focus "$( yabai -m query --windows --space | jq -re "[sort_by(.id) | .[] | select(.floating == 1) | .id] | nth(1 + index($( yabai -m query --windows --window | jq '.id'))) // first")"

# fn - space to toggle
fn - space : ~/.local/bin/fntoggle

# reload yabai
# ctrl + shift + cmd - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"
ctrl + shift + cmd - r : yabai --reload-service

# mac built-in keyboard {{{
# § -> ` and shift - § -> ~
0xa | 0x32
shift - 0xa | shift - 0x32

fn - j | down
fn - k | up
fn - h | left
fn - l | right

fn + shift - j | shift - down
fn + shift - k | shift - up
fn + shift - h | shift - left
fn + shift - l | shift - right

fn + ctrl - j | ctrl - down
fn + ctrl - k | ctrl - up
fn + ctrl - h | ctrl - left
fn + ctrl - l | ctrl - right

fn + alt - j | alt - down
fn + alt - k | alt - up
fn + alt - h | alt - left
fn + alt - l | alt - right

fn + ctrl + shift - j | ctrl + shift - down
fn + ctrl + shift - k | ctrl + shift - up
fn + ctrl + shift - h | ctrl + shift - left
fn + ctrl + shift - l | ctrl + shift - right

fn - u | pagedown
fn - i | pageup
fn - y | home
fn - o | end

fn + shift - u | shift - pagedown
fn + shift - i | shift - pageup
fn + shift - y | shift - home
fn + shift - o | shift - end

fn + cmd - j | cmd - down
fn + cmd - k | cmd - up
fn + cmd - h | cmd - left
fn + cmd - l | cmd - right
# }}}
