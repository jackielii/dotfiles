[make]
command=make
# set the working directory to the project root.
cwd=$(VIM_ROOT)

[clickhouse-format]
command=clickhouse format

[tsc-project]
command=npx tsc --noEmit
cwd=$(VIM_ROOT)
output=quickfix
errorformat = %E%f %#(%l\,%c): error %m
            %E%f %#(%l\,%c): %m
            %Eerror %m
            %C%\s%\+%m
save=2

[eslint-project]

[go-build-file]
command:go=go build -o /dev/null $(VIM_FILEPATH)
output=quickfix
save=1

[go-build-project]
command=go build -o /dev/null ./...
output=quickfix
cwd=$(VIM_ROOT)
save=2

[go-vet-project]
command=go vet ./...
output=quickfix
cwd=$(VIM_ROOT)
save=2

[go-test-project]
; command:c,cpp=gcc -O2 -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm -msse3
command=go test ./...
; command:make=make -f "$(VIM_FILEPATH)"
output=quickfix
; errorformat= %E%f:%l\ +0x
cwd=$(VIM_ROOT)
save=2

[go-install]
command=go install ./...
output=quickfix
cwd=$(VIM_ROOT)
save=2

[buf-format]
command:proto=buf format -w "$(VIM_FILEPATH)"
output=quickfix
cwd=$(VIM_ROOT)
errorformat=%EFailure: %f:%l:%c: %m
save=1
notify=:edit

[wire-generate]
command=wire ./...
output=quickfix
cwd=$(VIM_ROOT)
save=1

[pdf-preview]
command:markdown=pandoc $(VIM_FILEPATH) -o $(VIM_FILEPATH).pdf && atril $(VIM_FILEPATH).pdf
silent=1

[current-script-run]
command="$(VIM_FILEPATH)"
cwd=$(VIM_FILEDIR)
# output mode: run in a terminal
output=terminal

[buf-generate]
command=buf generate
output=quickfix
cwd=$(VIM_ROOT)
save=2

[markdow-toc]
command=gh-md-toc $(VIM_FILEPATH)
output=terminal
cwd=$(VIM_ROOT)
save=2

[brew-bundle-install]
command=brew bundle --global
save=1

[shfmt]
command=shfmt -w -i 2 -p "$(VIM_FILEPATH)"
output=quickfix
save=1
notify=:edit

[typora]
command:markdown=open -a Typora.app $(VIM_FILEPATH)
output=terminal
close=1

[zig-build-test]
command=~/.local/bin/zig build test
output=quickfix
errorformat=%m:%f:%l:%c:\ %.%#,%f:%l:%c:\ %m
save=2

[tex-compile-watch]
command=air-tex $(VIM_FILEPATH)
output=terminal

[gorun-mod]
command=gorun-mod $(VIM_FILEPATH)
output=terminal
save=2
