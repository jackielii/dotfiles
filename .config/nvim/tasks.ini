[tsc-project]
command=npx tsc --noEmit
cwd=$(VIM_ROOT)
output=quickfix
errorformat = %E%f %#(%l\,%c): error %m
            %E%f %#(%l\,%c): %m
            %Eerror %m
            %C%\s%\+%m
save=2

[eslint-project]

[go-build-project]
command=go build -o /dev/null ./...
output=quickfix
cwd=$(VIM_ROOT)
save=2

[go-vet-project]
command=go vet ./...
output=quickfix
cwd=$(VIM_ROOT)
save=2

[go-test-project]
; command:c,cpp=gcc -O2 -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm -msse3
command=go test ./...
; command:make=make -f "$(VIM_FILEPATH)"
output=quickfix
; errorformat= %E%f:%l\ +0x
cwd=$(VIM_ROOT)
save=2

[buf-format]
command:proto=buf format -w "$(VIM_FILEPATH)"
output=quickfix
cwd=$(VIM_ROOT)
errorformat=%EFailure: %f:%l:%c: %m
; save=1 saves the buffer before running
save=1
; strip=1 strips the head & tail of the output
; strip=1

[wire-generate]
command=wire ./...
output=quickfix
cwd=$(VIM_ROOT)
save=1

[pdf-preview]
command:markdown=pandoc $(VIM_FILEPATH) -o $(VIM_FILEPATH).pdf && atril $(VIM_FILEPATH).pdf
silent=1

[current-script-run]
command="$(VIM_FILEPATH)"
cwd=$(VIM_FILEDIR)
# output mode: run in a terminal
output=terminal

[buf-generate]
command=buf generate
output=quickfix
cwd=$(VIM_ROOT)
save=2

[markdow-toc]
command=gh-md-toc $(VIM_FILEPATH)
output=terminal
cwd=$(VIM_ROOT)
save=2

[brew-bundle-install]
command=brew bundle --global
save=1
