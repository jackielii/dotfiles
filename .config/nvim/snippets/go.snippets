snippet fum "method"
	func (${1:receiver} ${2:type}) ${3:funcName}(${4}) ${5:error} {
		${6}
	}
	${0}

snippet fumh "http handler function on receiver"
	func (${1:receiver} ${2:type}) ${3:funcName}(${4:w} http.ResponseWriter, ${5:r} *http.Request) {
		${0:${VISUAL}}
	}

snippet test "test function"
	func Test${1:name}(t *testing.T) {
		${0:${VISUAL}}
	}

snippet testt "table test function"
	func Test${1:name}(t *testing.T) {
		tests := []struct {
			name string
		}{
			{
				name: "${2:test name}",
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				${0:${VISUAL}}
			})
		}
	}

snippet bench "benchmark function"
	func Benchmark${1:name}(b *testing.B) {
		for i := 0; i < b.N; i++ {
			${2}
		}
	}
	${0}

snippet ife "if error not nil, return err"
	if err != nil {
		return ${1:err}
	}
	${0}

snippet ims "import"
	import (
		"${1:package}"
	)

snippet vars "variables declaration"
	var (
		${1} ${2} = ${3}
	)

snippet const "constants with iota"
	const (
		${1} ${2} = ${3}
	)

snippet main "func main"
	func main() {
		${0:${VISUAL}}
	}
	
snippet notimpl "not implemented"
	panic("not implemented")

snippet req "require no err"
	require.NoError(t, err)
